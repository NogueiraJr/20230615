// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// S I S T E M A S 
  model Systems {
    id                 String      @id @unique
    seq                String
    name               String
    description        String?
    active             Boolean     @default(true)
    createAt           DateTime    @default(now())
    updatedAt          DateTime    @updatedAt
    systemMenuModule   SystemMenuModule[]
    userRentals        UserRentals[]
    rentalOperation    RentalOperations[]
    products           Products[]
  }

// M E N U S 
  model Menus {
    id                 String      @id @unique
    seq                String
    ref                String
    name               String
    description        String?
    active             Boolean     @default(true)
    createAt           DateTime    @default(now())
    updatedAt          DateTime    @updatedAt
    systemMenuModule   SystemMenuModule[]
  }

// M Ó D U L O S 
  model Modules {
    id                 String      @id @unique
    seq                String
    ref                String
    name               String
    description        String?
    active             Boolean     @default(true)
    createAt           DateTime    @default(now())
    updatedAt          DateTime    @updatedAt
    systemMenuModule   SystemMenuModule[]
  } 

// S I S T E M A   X   M E N U   X   M Ó D U L O 
  model SystemMenuModule {
    id          String      @id @unique
    active      Boolean     @default(true)

    systemId    String? 
    system      Systems?    @relation(fields: [systemId], references: [id])

    menuId      String? 
    menu        Menus?      @relation(fields: [menuId], references: [id])

    moduleId    String? 
    module      Modules?    @relation(fields: [moduleId], references: [id])

    userSystemMenuModule    UserSystemMenuModule[]

    createAt    DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
  } 

  model UserSystemMenuModule {
    id                  String    @id @default(cuid())
    active              Boolean   @default(true)

    userId              String 
    user                Users     @relation(fields: [userId], references: [id])

    systemMenuModuleId  String 
    systemMenuModule    SystemMenuModule  @relation(fields: [systemMenuModuleId], references: [id])
  
    createAt            DateTime  @default(now())
    updatedAt           DateTime  @updatedAt
  }

// T A G S
  model UserTags {
    id          String      @id @default(cuid())
    tag         String
    description String
    user_id     String      @map("user_id")
    
    active      Boolean     @default(true)
    createAt    DateTime    @default(now())
    updatedAt   DateTime    @updatedAt

    users       Users       @relation(fields: [user_id], references: [id])

  }

// U S E R S 
  model Users {
    id          String      @id @default(cuid())
    userTypeId  String
    name        String
    usr         String
    psw         String
    emails      UserEmails[]
    phones      UserPhones[]

    tags        String?
    active      Boolean     @default(true)
    createAt    DateTime    @default(now())
    updatedAt   DateTime    @updatedAt

    userType    UserTypes   @relation(fields: [userTypeId], references: [id])
    user        Users?      @relation("user", fields: [userId], references: [id])
    userId      String?
    users       Users[]     @relation("user")
    userTags    UserTags[]

    userSystemMenuModule UserSystemMenuModule[]

    clients     UserClients[]
    suppliers   UserSuppliers[]
    partners    UserPartners[]
    
    rentals     UserRentals[]
    
    products     Products[]

  }

  model UserTypes {
    id          String      @id @unique
    name        String
    description String?
    active      Boolean     @default(true)
    createAt    DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
    users       Users[]
  }
// U S E R S  E M A I L S 
  model UserEmails {
    id              String         @id @default(cuid())
    email           String
    userId          String
    userEmailTypeId String

    tags            String?
    active          Boolean        @default(true)
    createAt        DateTime       @default(now())
    updatedAt       DateTime       @updatedAt
    
    user            Users          @relation(fields: [userId], references: [id])
    UserEmailType   UserEmailTypes @relation(fields: [userEmailTypeId], references: [id])
  }

  model UserEmailTypes {
    id          String       @id @unique
    name        String
    description String?
    active      Boolean      @default(true)
    createAt    DateTime     @default(now())
    updatedAt   DateTime     @updatedAt
    userEmails  UserEmails[]
  }
// U S E R S  P H O N E S 
  model UserPhones {
    id              String         @id @default(cuid())
    phone           String
    userId          String
    userPhoneTypeId String 

    tags            String?
    active          Boolean        @default(true)
    createAt        DateTime       @default(now())
    updatedAt       DateTime       @updatedAt
    
    user            Users          @relation(fields: [userId], references: [id])
    userPhoneType   UserPhoneTypes @relation(fields: [userPhoneTypeId], references: [id])
  }

  model UserPhoneTypes {
    id          String       @id @unique
    name        String
    description String?
    active      Boolean      @default(true)
    createAt    DateTime     @default(now())
    updatedAt   DateTime     @updatedAt
    phones      UserPhones[]
  }
// C L I E N T S 
  model Clients {
    id          String      @id @default(cuid())
    name        String

    tags        String?
    active      Boolean     @default(true)
    createAt    DateTime    @default(now())
    updatedAt   DateTime    @updatedAt

    users                 UserClients[]

  }

  model UserClients {
    id          String      @id @default(cuid())
    user_id     String      @map("user_id")
    client_id   String      @map("client_id")
    
    user        Users       @relation(fields: [user_id], references: [id])
    client      Clients     @relation(fields: [client_id], references: [id])

    userRentalOperations  UserRentalOperations[]

    @@unique([user_id, client_id])

  }

// S U P P L I E R S 
  model Suppliers {
    id          String      @id @default(cuid())
    name        String

    tags        String?
    active      Boolean     @default(true)
    createAt    DateTime    @default(now())
    updatedAt   DateTime    @updatedAt

    users       UserSuppliers[]
  }

  model UserSuppliers {
    id           String      @id @default(cuid())
    user_id      String      @map("user_id")
    supplier_id  String      @map("supplier_id")
    
    user        Users        @relation(fields: [user_id], references: [id])
    supplier    Suppliers    @relation(fields: [supplier_id], references: [id])

    @@unique([user_id, supplier_id])

  }
// P A R T N E R 
  model Partners {
    id          String      @id @default(cuid())
    name        String

    tags        String?
    active      Boolean     @default(true)
    createAt    DateTime    @default(now())
    updatedAt   DateTime    @updatedAt

    users       UserPartners[]
  }

  model UserPartners {
    id           String      @id @default(cuid())
    user_id      String      @map("user_id")
    partner_id  String      @map("partner_id")
    
    user        Users        @relation(fields: [user_id], references: [id])
    partner    Partners    @relation(fields: [partner_id], references: [id])

    @@unique([user_id, partner_id])

  }
// P R O D U C T S
  model Products {
    id                  String       @id @default(cuid())
    name                String
    description         String?
    productType_id      String

    tags                String?
    active              Boolean      @default(true)
    createAt            DateTime     @default(now())
    updatedAt           DateTime     @updatedAt
    
    user_id             String       @map("user_id")
    system_id           String       @map("system_id")

    user                Users        @relation(fields: [user_id], references: [id])
    system              Systems      @relation(fields: [system_id], references: [id])

    productType         ProductTypes @relation(fields: [productType_id], references: [id])

    userRentalProducts  UserRentalProducts[]
  }

  model ProductTypes {
    id          String       @id @unique
    name        String
    description String?

    active      Boolean      @default(true)
    createAt    DateTime     @default(now())
    updatedAt   DateTime     @updatedAt

    products    Products[]
  }
// U S E R   R E N T A L S
  model UserRentals {
    id           String      @id @default(cuid())
    description  String
    notes        String

    priceRental  Decimal
    priceCharged Decimal

    user_id      String      @map("user_id")
    system_id    String      @map("system_id")
    
    user         Users       @relation(fields: [user_id], references: [id])
    system       Systems     @relation(fields: [system_id], references: [id])

    tags         String?
    active       Boolean     @default(true)
    createAt     DateTime    @default(now())
    updatedAt    DateTime    @updatedAt

    userRentalOperations    UserRentalOperations[]

    @@unique([id, user_id, system_id])

  }
  
  model UserRentalOperations {
    id                 String      @id @default(cuid())
    userRental_id      String      @map("userRental_id")
    userClient_id      String      @map("userClient_id")
    rentalOperation_id String      @map("rentalOperation_id")

    description        String
    notes              String

    scheduledAt        DateTime
    executedAt         DateTime
    finishedAt         DateTime

    productTotalPrice  Decimal

    tags               String?
    active             Boolean     @default(true)
    createAt           DateTime    @default(now())
    updatedAt          DateTime    @updatedAt

    userRentals        UserRentals @relation(fields: [userRental_id], references: [id])
    rentalOperation    RentalOperations @relation(fields: [rentalOperation_id], references: [id])
    userClient         UserClients @relation(fields: [userClient_id], references: [id])

    userRentalProduct UserRentalProducts[]

  }
  
  model RentalOperations {
    id           String    @id @default(cuid())
    system_id    String    @map("system_id")
    
    seq          String
    name         String
    description  String

    tags         String?
    active       Boolean   @default(true)
    createAt     DateTime  @default(now())
    updatedAt    DateTime  @updatedAt

    system       Systems   @relation(fields: [system_id], references: [id])
        
    userRentalOperations   UserRentalOperations[]

  } 

  model UserRentalProducts {
    id                      String    @id @default(cuid())
    product_id              String
    userRentalOperation_id  String

    seq                     String
    description             String

    tags                    String?
    active                  Boolean   @default(true)
    createAt                DateTime  @default(now())
    updatedAt               DateTime  @updatedAt

    product                 Products              @relation(fields: [product_id], references: [id])
    userRentalOperation     UserRentalOperations  @relation(fields: [userRentalOperation_id], references: [id])
  }

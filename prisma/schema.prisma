// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// S I S T E M A S
  model Systems {
    id                 String      @id @unique
    seq                String
    name               String
    description        String?
    active             Boolean     @default(true)
    createAt           DateTime    @default(now())
    updatedAt          DateTime    @updatedAt
    systemMenuModule   SystemMenuModule[]
  }

// M E N U S
  model Menus {
    id                 String      @id @unique
    seq                String
    ref                String
    name               String
    description        String?
    active             Boolean     @default(true)
    createAt           DateTime    @default(now())
    updatedAt          DateTime    @updatedAt
    systemMenuModule   SystemMenuModule[]
  }

// M Ó D U L O S
  model Modules {
    id                 String      @id @unique
    seq                String
    ref                String
    name               String
    description        String?
    active             Boolean     @default(true)
    createAt           DateTime    @default(now())
    updatedAt          DateTime    @updatedAt
    systemMenuModule   SystemMenuModule[]
  } 

// S I S T E M A   X   M E N U   X   M Ó D U L O
  model SystemMenuModule {
    id          String      @id @unique
    active      Boolean     @default(true)

    systemId    String? 
    system      Systems?    @relation(fields: [systemId], references: [id])

    menuId      String? 
    menu        Menus?      @relation(fields: [menuId], references: [id])

    moduleId    String? 
    module      Modules?    @relation(fields: [moduleId], references: [id])

    userSystemMenuModule    UserSystemMenuModule[]

    createAt    DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
  } 

  model UserSystemMenuModule {
    id                  String    @id @default(cuid())
    active              Boolean   @default(true)

    userId              String 
    user                Users     @relation(fields: [userId], references: [id])

    systemMenuModuleId  String 
    systemMenuModule    SystemMenuModule  @relation(fields: [systemMenuModuleId], references: [id])
  
    createAt            DateTime  @default(now())
    updatedAt           DateTime  @updatedAt
  }

// U S E R S
  model Users {
    id          String      @id @default(cuid())
    userTypeId  String
    name        String
    emails      UserEmails[]
    phones      UserPhones[]
    active      Boolean     @default(true)
    createAt    DateTime    @default(now())
    updatedAt   DateTime    @updatedAt

    userType    UserTypes   @relation(fields: [userTypeId], references: [id])
    user        Users?      @relation("user", fields: [userId], references: [id])
    userId      String?
    users       Users[]     @relation("user")

    userSystemMenuModule UserSystemMenuModule[]
  }

  model UserTypes {
    id          String      @id @unique
    name        String
    description String?
    active      Boolean     @default(true)
    createAt    DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
    users       Users[]
  }

  model UserEmails {
    id              String         @id @default(cuid())
    email           String
    userId          String
    userEmailTypeId String
    active          Boolean        @default(true)
    createAt        DateTime       @default(now())
    updatedAt       DateTime       @updatedAt
    
    user            Users          @relation(fields: [userId], references: [id])
    UserEmailType   UserEmailTypes @relation(fields: [userEmailTypeId], references: [id])
  }

  model UserEmailTypes {
    id          String       @id @unique
    name        String
    description String?
    active      Boolean      @default(true)
    createAt    DateTime     @default(now())
    updatedAt   DateTime     @updatedAt
    userEmails  UserEmails[]
  }

  model UserPhones {
    id              String         @id @default(cuid())
    phone           String
    userId          String
    userPhoneTypeId String 
    active          Boolean        @default(true)
    createAt        DateTime       @default(now())
    updatedAt       DateTime       @updatedAt
    
    user            Users          @relation(fields: [userId], references: [id])
    userPhoneType   UserPhoneTypes @relation(fields: [userPhoneTypeId], references: [id])
  }

  model UserPhoneTypes {
    id          String       @id @unique
    name        String
    description String?
    active      Boolean      @default(true)
    createAt    DateTime     @default(now())
    updatedAt   DateTime     @updatedAt
    phones      UserPhones[]
  }
